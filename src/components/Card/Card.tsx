import React, { useState } from 'react';
import styles from './Card.module.css';

const tagIcons: Record<string, string> = {
  '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è': 'üçΩÔ∏è',
  '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è': 'üçΩÔ∏è',
  '–ò—Å–ø–∞–Ω—Å–∫–∞—è': 'üçΩÔ∏è',
  '–í–µ–≥–∞–Ω—Å–∫–æ–µ –º–µ–Ω—é': 'üå±',
  '–§–µ—Ä–º–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã': 'üåæ',
  '–î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é': 'üßí',
  '–ü–∞–Ω–æ—Ä–∞–º–Ω—ã–π –≤–∏–¥': 'ü™ü',
  '–¢–µ—Ä—Ä–∞—Å–∞': 'ü™ü',
  '–í–∏–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞': 'üç∑',
  '–î—Ä–æ–≤—è–Ω–∞—è –ø–µ—á—å': 'üî•',
};
const priceRangeIcons: Record<string, string> = {
  '‚Ç¨': 'üí∞',
  '‚Ç¨‚Ç¨': 'üíµ',
  '‚Ç¨‚Ç¨‚Ç¨': 'üí≥',
};


interface CardProps {
  id: string;
  image: string;
  title: string;
  location?: string;
  rating?: number;
  cuisineTags?: string[];
  featureTags?: string[];
  priceRange?: string;
  savedStatus?: boolean;
  onClick?: () => void;
  onSaveToggle?: (saved: boolean, event?: React.MouseEvent) => void;
}

const Card: React.FC<CardProps> = ({
  id,
  image,
  title,
  location,
  rating,
  cuisineTags = [],
  featureTags = [],
  priceRange,
  savedStatus = false,
  onClick,
  onSaveToggle
}) => {
  const renderIconTags = (tags: string[]) => {
    const maxVisible = 3; // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 3 —Ç–µ–≥–∞
    const visibleTags = tags.slice(0, maxVisible);
    const hiddenCount = tags.length - maxVisible;
  
    return (
      <>
        {visibleTags.map((tag, i) => (
          <span key={i} className={styles.iconTag}>
            {tagIcons[tag] || 'üîπ'} {tag}
          </span>
        ))}
        {hiddenCount > 0 && (
          <span className={styles.moreTag}>+{hiddenCount}</span>
        )}
      </>
    );
  };
  

  // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∑–∞–∫–ª–∞–¥–∫–∏
  const [isSaved, setIsSaved] = useState(savedStatus);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∑–∞–∫–ª–∞–¥–∫—É
  const handleSaveClick = (e: React.MouseEvent) => {
    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ onClick —Ä–æ–¥–∏—Ç–µ–ª—è
    e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É

    const newSavedState = !isSaved;
    setIsSaved(newSavedState);

    // –í—ã–∑—ã–≤–∞–µ–º callback –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –ë–î, –µ—Å–ª–∏ –æ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
    if (onSaveToggle) {
      onSaveToggle(newSavedState, e);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–∑–æ–≤–∞ onClick, –µ—Å–ª–∏ –æ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
  const handleClick = () => {
    if (onClick) {
      onClick();
    }
  };

  return (
    <div className={styles.card} onClick={handleClick}>
      <div className={styles.cardImageContainer}>
        {image ? (
          <img
            src={image}
            alt={title}
            className={styles.cardImage}
            loading="lazy"
          />
        ) : (
          <div className={styles.cardImagePlaceholder}>–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" */}
        <button
          className={styles.favoriteButton}
          onClick={handleSaveClick}
          aria-label={isSaved ? "–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ" : "–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"}
        >
          <svg
            viewBox="0 0 24 24"
            fill={isSaved ? "#fff" : "none"}
            stroke="#fff"
            strokeWidth="2"
            width="24"
            height="24"
          >
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
          </svg>
        </button>

        {/* –†–µ–π—Ç–∏–Ω–≥ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ */}
        {rating && (
          <div className={styles.ratingBadge}>
            {rating.toFixed(1)} <span className={styles.starIcon}>‚òÖ</span>
          </div>
        )}
      </div>

      <div className={styles.cardContent}>
        <div className={styles.cardHeader}>
          {/* –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ */}
          <h3 className={styles.cardTitle}>{title}</h3>

          {/* –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω */}
          {priceRange && (
            <div className={`${styles.priceTag} ${priceRange === '‚Ç¨‚Ç¨‚Ç¨' ? styles.expensivePrice :
                priceRange === '‚Ç¨‚Ç¨' ? styles.moderatePrice :
                  styles.affordablePrice
              }`}>
              {priceRange}
            </div>
          )}
        </div>

        {/* –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ */}
        {location && <p className={styles.cardLocation}>{location}</p>}

        {/* –¢–µ–≥–∏ */}
        {/* –ö—Ä–∞—Ç–∫–∏–µ –∏–∫–æ–Ω–∫–∏-—Ç–µ–≥–∏ */}
        <div className={styles.iconTagsRow}>
          {renderIconTags([...cuisineTags, ...featureTags])}
        </div>

      </div>
    </div>
  );
};

export default Card;