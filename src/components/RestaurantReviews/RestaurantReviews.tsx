import React, { useState } from 'react';
import styles from './RestaurantReviews.module.css';

interface Review {
  id: string;
  author: string;
  authorAvatar?: string;
  rating: number;
  comment: string;
  date: string;
  likes?: number;
}

interface RestaurantReviewsProps {
  rating: number;
  reviews: Review[];
  onWriteReview: () => void;
}

const RestaurantReviews: React.FC<RestaurantReviewsProps> = ({
  rating,
  reviews,
  onWriteReview
}) => {
  const [filterType, setFilterType] = useState<'newest' | 'positive' | 'critical'>('newest');

  // –†–µ–Ω–¥–µ—Ä –∑–≤–µ–∑–¥–æ—á–µ–∫ –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
  const renderStars = (rating: number) => {
    const stars = [];
    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö –∑–≤–µ–∑–¥
    const fullStars = Math.floor(rating);
    // –ï—Å—Ç—å –ª–∏ –ø–æ–ª–æ–≤–∏–Ω–∞ –∑–≤–µ–∑–¥—ã
    const hasHalfStar = rating % 1 >= 0.5;
    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É—Å—Ç—ã—Ö –∑–≤–µ–∑–¥
    const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–µ –∑–≤–µ–∑–¥—ã
    for (let i = 0; i < fullStars; i++) {
      stars.push(<span key={`full-${i}`} className={styles.star}>‚òÖ</span>);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–æ–≤–∏–Ω—É –∑–≤–µ–∑–¥—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (hasHalfStar) {
      stars.push(<span key="half" className={styles.halfStar}>‚òÖ</span>);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ –∑–≤–µ–∑–¥—ã
    for (let i = 0; i < emptyStars; i++) {
      stars.push(<span key={`empty-${i}`} className={styles.emptyStar}>‚òÜ</span>);
    }
    
    return stars;
  };

  // –§–∏–ª—å—Ç—Ä—É–µ–º –æ—Ç–∑—ã–≤—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
  const getFilteredReviews = () => {
    switch (filterType) {
      case 'positive':
        return [...reviews].filter(review => review.rating >= 4).sort((a, b) => b.rating - a.rating);
      case 'critical':
        return [...reviews].filter(review => review.rating < 4).sort((a, b) => a.rating - b.rating);
      case 'newest':
      default:
        return [...reviews]; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∑—ã–≤—ã —É–∂–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –¥–∞—Ç–µ
    }
  };

  const filteredReviews = getFilteredReviews();

  return (
    <div className={styles.reviewsSection}>
      <div className={styles.reviewsHeader}>
        <div className={styles.reviewsSummary}>
          <h2 className={styles.sectionTitle}>–û—Ç–∑—ã–≤—ã –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π</h2>
          <div className={styles.reviewsOverview}>
            <div className={styles.reviewsRating}>
              <div className={styles.ratingBig}>{rating.toFixed(1)}</div>
              <div className={styles.ratingStarsBig}>
                {renderStars(rating)}
              </div>
            </div>
            <div className={styles.reviewsCount}>
              –í—Å–µ–≥–æ {reviews.length} –æ—Ç–∑—ã–≤–æ–≤
            </div>
          </div>
        </div>
        
        <button className={styles.writeReviewButton} onClick={onWriteReview}>
          <span className={styles.writeReviewIcon}>‚úèÔ∏è</span>
          –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤
        </button>
      </div>
      
      <div className={styles.reviewFilters}>
        <div className={styles.filterLabel}>–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ:</div>
        <div className={styles.filterOptions}>
          <button 
            className={`${styles.filterOption} ${filterType === 'newest' ? styles.active : ''}`}
            onClick={() => setFilterType('newest')}
          >
            –ù–æ–≤—ã–µ
          </button>
          <button 
            className={`${styles.filterOption} ${filterType === 'positive' ? styles.active : ''}`}
            onClick={() => setFilterType('positive')}
          >
            –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ
          </button>
          <button 
            className={`${styles.filterOption} ${filterType === 'critical' ? styles.active : ''}`}
            onClick={() => setFilterType('critical')}
          >
            –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ
          </button>
        </div>
      </div>
      
      {filteredReviews.length > 0 ? (
        <div className={styles.reviewsList}>
          {filteredReviews.map(review => (
            <div key={review.id} className={styles.reviewCard}>
              <div className={styles.reviewAuthorSection}>
                <img 
                  src={review.authorAvatar || "https://placehold.jp/50x50.png"}
                  alt={review.author}
                  className={styles.reviewAuthorAvatar}
                />
                <div className={styles.reviewAuthorInfo}>
                  <h3 className={styles.reviewAuthorName}>{review.author}</h3>
                  <div className={styles.reviewMetaInfo}>
                    <span className={styles.reviewDate}>{review.date}</span>
                  </div>
                </div>
              </div>
              
              <div className={styles.reviewContent}>
                <div className={styles.reviewRating}>
                  {renderStars(review.rating)}
                </div>
                <p className={styles.reviewText}>{review.comment}</p>
                
                <div className={styles.reviewActions}>
                  <button className={styles.reviewLikeButton}>
                    <span className={styles.likeIcon}>üëç</span>
                    <span>–ü–æ–ª–µ–∑–Ω–æ</span>
                    {review.likes && review.likes > 0 && (
                      <span className={styles.likesCount}>{review.likes}</span>
                    )}
                  </button>
                  <button className={styles.reviewReplyButton}>
                    <span className={styles.replyIcon}>üí¨</span>
                    <span>–û—Ç–≤–µ—Ç–∏—Ç—å</span>
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div className={styles.noReviews}>
          <div className={styles.noReviewsIcon}>üìù</div>
          <h3 className={styles.noReviewsTitle}>
            {filterType === 'newest' 
              ? '–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤' 
              : filterType === 'positive' 
                ? '–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç' 
                : '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç'}
          </h3>
          <p className={styles.noReviewsText}>
            {filterType === 'newest' 
              ? '–ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –ø–æ–¥–µ–ª–∏—Ç—Å—è —Å–≤–æ–∏–º –º–Ω–µ–Ω–∏–µ–º –æ–± —ç—Ç–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ!' 
              : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥—Ä—É–≥–∏—Ö –æ—Ç–∑—ã–≤–æ–≤.'}
          </p>
          {filterType === 'newest' && (
            <button className={styles.writeFirstReviewButton} onClick={onWriteReview}>
              –ù–∞–ø–∏—Å–∞—Ç—å –ø–µ—Ä–≤—ã–π –æ—Ç–∑—ã–≤
            </button>
          )}
        </div>
      )}
    </div>
  );
};

export default RestaurantReviews;